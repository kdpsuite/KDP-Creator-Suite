name: Flutter Build Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for committing fixed files

    env:
      FLUTTER_VERSION: "3.37.0-0.1.pre"
      APK_OUTPUT_DIR: "build/apks"

    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up git for committing fixes
      - name: Git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      # 3. Install Flutter manually
      - name: Install Flutter
        run: |
          git clone -b $FLUTTER_VERSION https://github.com/flutter/flutter.git $HOME/flutter
          export PATH="$HOME/flutter/bin:$PATH"
          flutter channel beta
          flutter upgrade || echo "⚠️ Flutter upgrade failed, continuing..."

      # 4. Run project fix scripts (AppTheme & permissions)
      - name: Run fix_files.sh
        run: |
          chmod +x mobile-app/scripts/fix_files.sh
          ./mobile-app/scripts/fix_files.sh
      - name: Run fix_app_theme_imports.sh
        run: |
          chmod +x mobile-app/scripts/fix_app_theme_imports.sh
          ./mobile-app/scripts/fix_app_theme_imports.sh

      # 5. Commit any fixed files back to repo
      - name: Commit fixed files
        run: |
          git add .
          git diff --cached --quiet || git commit -m "Auto: Apply AppTheme & project fixes" || echo "No changes to commit"
          git push || echo "Push failed or no write permissions"

      # 6. Check & upgrade Dart dependencies
      - name: Flutter pub outdated & upgrade
        run: |
          flutter pub outdated
          flutter pub upgrade --major-versions
          flutter pub get

      # 7. Automatic versioning & build numbering
      - name: Set version & build number
        run: |
          VERSION=$(date +%Y.%m.%d.%H%M)
          sed -i "s/^version:.*/version: $VERSION+1/" mobile-app/pubspec.yaml

      # 8. Build APKs
      - name: Build Debug APK
        run: flutter build apk --debug
      - name: Build Release APK
        run: flutter build apk --release

      # 9. Zip both APKs
      - name: Prepare APKs
        run: |
          mkdir -p $APK_OUTPUT_DIR
          cp build/app/outputs/flutter-apk/app-debug.apk $APK_OUTPUT_DIR/debug.apk
          cp build/app/outputs/flutter-apk/app-release.apk $APK_OUTPUT_DIR/release.apk
          cd $APK_OUTPUT_DIR
          zip -r apks.zip debug.apk release.apk

      # 10. Upload APKs as artifacts
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: $APK_OUTPUT_DIR/apks.zip
