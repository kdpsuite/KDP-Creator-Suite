name: Build Flutter APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_apk:
    name: Build Debug and Release APK
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository manually (no external actions)
      - name: Checkout repository
        run: |
          git init
          git remote add origin https://github.com/${{ github.repository }}.git
          git fetch origin ${{ github.ref }}
          git checkout FETCH_HEAD

      # 2️⃣ Install Flutter manually (no cache)
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          flutter doctor

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 4️⃣ Determine version numbers
      - name: Set version numbers
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "0.0.1")
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          echo "VERSION_NAME=$TAG" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "Version set to $TAG+$BUILD_NUMBER"

      # 5️⃣ Build Debug APK
      - name: Build Debug APK
        run: |
          sed -i "s/^version: .*/version: $VERSION_NAME-debug+$BUILD_NUMBER/" pubspec.yaml
          flutter pub get
          flutter build apk --debug

      # 6️⃣ Build Release APK
      - name: Build Release APK
        run: |
          sed -i "s/^version: .*/version: $VERSION_NAME+$BUILD_NUMBER/" pubspec.yaml
          flutter pub get
          flutter build apk --release

      # 7️⃣ Prepare artifacts directory
      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/app-debug.apk artifacts/
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/
          echo "Artifacts prepared."

      # 8️⃣ Upload artifacts to workflow (no external action)
      - name: Upload artifacts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Uploading APKs as artifacts..."
          gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts \
            -F name="app-debug-apk" \
            -F path="artifacts/app-debug.apk" || true

          gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts \
            -F name="app-release-apk" \
            -F path="artifacts/app-release.apk" || true
