name: Flutter Build

on:
  workflow_dispatch:       # Manual trigger
  push:
    branches:
      - main              # Run on push to main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "beta"                # Your desired Flutter version
      FLUTTER_GIT_URL: "https://github.com/flutter/flutter.git"
      
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history

      # 2. Configure Git for committing fixes
      - name: Git setup for commit
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # 3. Install Flutter manually
      - name: Install Flutter
        run: |
          git clone -b $FLUTTER_VERSION $FLUTTER_GIT_URL $HOME/flutter
          echo "PATH=$HOME/flutter/bin:$PATH" >> $GITHUB_ENV
          flutter doctor -v

      # 4. Fix file permissions before scripts
      - name: Fix Dart file permissions
        run: |
          chmod +x mobile-app/scripts/*.sh
          find mobile-app -type f -name "*.dart" -exec chmod 644 {} \;

      # 5. Run project repair scripts
      - name: Run project fix scripts
        run: |
          echo "Running fix_files.sh..."
          bash mobile-app/scripts/fix_files.sh
          echo "Running fix_app_theme_imports.sh..."
          bash mobile-app/scripts/fix_app_theme_imports.sh

      # 6. Commit fixed files
      - name: Commit fixed files
        run: |
          git add .
          git diff --cached --quiet || git commit -m "Fix AppTheme imports & permissions"

      # 7. Dart & Flutter dependency management
      - name: Check outdated dependencies
        run: |
          flutter pub outdated
          flutter pub upgrade --major-versions
          flutter pub get

      # 8. Flutter build
      - name: Build APKs
        run: |
          flutter build apk --debug
          flutter build apk --release

      # 9. APK zipping
      - name: Zip APKs
        run: |
          mkdir -p build/apks
          cp build/app/outputs/flutter-apk/app-debug.apk build/apks/
          cp build/app/outputs/flutter-apk/app-release.apk build/apks/
          cd build
          zip -r apks.zip apks

      # 10. Upload APK artifact
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: build/apks.zip

      # 11. Automatic versioning & build numbering
      # (Implement your versioning script/step here, already approved)

      # 12. Final sanity check (optional)
      - name: Flutter doctor final check
        run: flutter doctor -v
