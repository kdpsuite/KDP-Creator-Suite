name: Build Flutter APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_apk:
    name: Build Debug and Release APK
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: mobile-app

    steps:
      - name: Checkout repository
        # using pinned kdpsuite checkout from your environment (change if you pin differently)
        uses: kdpsuite/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Ensure fix_files.sh is executable and run it
        shell: bash
        run: |
          chmod +x ./scripts/fix_files.sh || true
          ./scripts/fix_files.sh

      - name: Ensure fix_app_theme_imports.sh is executable and run it
        shell: bash
        run: |
          chmod +x ./scripts/fix_app_theme_imports.sh || true
          ./scripts/fix_app_theme_imports.sh

      - name: Setup Flutter SDK (clone & add to PATH)
        shell: bash
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa libgtk-3-dev clang cmake ninja-build pkg-config

          # Clone Flutter SDK into repo root/flutter if not present
          if [ ! -d "$GITHUB_WORKSPACE/flutter" ]; then
            git clone https://github.com/flutter/flutter.git -b beta "$GITHUB_WORKSPACE/flutter"
            cd "$GITHUB_WORKSPACE/flutter"
            git checkout 3.37.0-0.1.pre || true
          else
            cd "$GITHUB_WORKSPACE/flutter"
            git fetch --all --tags || true
          fi

          # Persist flutter to PATH for subsequent steps
          echo "$GITHUB_WORKSPACE/flutter/bin" >> "$GITHUB_PATH"

          # verify and accept licenses (accept ignoring broken-pipe)
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter --version
          flutter doctor -v
          yes | flutter doctor --android-licenses || true

      - name: Get Flutter dependencies
        shell: bash
        run: |
          # ensure flutter is on PATH for this step
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter pub get

      - name: Apply dart fixes (safe)
        shell: bash
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          dart fix --apply || echo "dart fix returned non-zero or no fixes needed"

      - name: Build Debug APK
        shell: bash
        run: |
          set -e
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.1")
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          sed -i "s/^version: .*/version: $TAG-debug+$BUILD_NUMBER/" pubspec.yaml || true
          flutter pub get
          flutter build apk --debug

      - name: Build Release APK
        shell: bash
        run: |
          set -e
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          TAG=$(git describe --tags --ab
