name: Flutter Build and Repair

on:
  workflow_dispatch:   # Manual run
  push:
    branches: [main, beta]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Git setup for commits
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # 3Ô∏è‚É£ Install tar if missing (fix for Ubuntu runners missing tar)
      - name: Ensure tar installed
        run: sudo apt-get update && sudo apt-get install -y tar

      # 4Ô∏è‚É£ Manual Flutter installation
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b beta $HOME/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$PATH"
          flutter --version

      # 5Ô∏è‚É£ Flutter preflight check
      - name: Flutter Doctor
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter doctor -v

      # 6Ô∏è‚É£ Fix Dart file permissions (before scripts)
      - name: Fix Dart file permissions
        run: |
          find . -type f -name "*.dart" -exec chmod 644 {} \;

      # 7Ô∏è‚É£ Ensure scripts are executable
      - name: Set executable permissions
        run: chmod +x scripts/*.sh || true

      # 8Ô∏è‚É£ Run repair scripts
      - name: Run file fix scripts
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          bash scripts/fix_files.sh || true
          bash scripts/fix_app_theme_imports.sh || true

      # 9Ô∏è‚É£ Commit repaired files (if any)
      - name: Commit fixed files
        run: |
          git add .
          git diff --cached --quiet || git commit -m "Auto-fixed Flutter/Dart issues"
          git push origin HEAD:${{ github.ref_name }}

      # üîü Dart & Flutter dependency management
      - name: Flutter Pub Management
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter pub outdated || true
          flutter pub upgrade --major-versions
          flutter pub get

      # 1Ô∏è‚É£1Ô∏è‚É£ Build APKs
      - name: Build APKs
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter build apk --debug
          flutter build apk --release

      # 1Ô∏è‚É£2Ô∏è‚É£ Prepare APK artifacts
      - name: Prepare APK Artifacts
        run: |
          mkdir -p build/apks
          cp build/app/outputs/flutter-apk/app-debug.apk build/apks/ || true
          cp build/app/outputs/flutter-apk/app-release.apk build/apks/ || true
          cd build && zip -r apks.zip apks

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload build artifacts
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks
          path: build/apks.zip

      # 1Ô∏è‚É£4Ô∏è‚É£ Versioning (auto bump example)
      - name: Auto Versioning
        run: |
          VERSION_FILE="pubspec.yaml"
          if [ -f "$VERSION_FILE" ]; then
            CURRENT_VERSION=$(grep '^version:' $VERSION_FILE | awk '{print $2}' | cut -d'+' -f1)
            BUILD_NUM=$(date +%s)
            NEW_VERSION="${CURRENT_VERSION}+${BUILD_NUM}"
            sed -i "s/^version:.*/version: ${NEW_VERSION}/" $VERSION_FILE
            git add $VERSION_FILE
            git diff --cached --quiet || git commit -m "Bump version to ${NEW_VERSION}"
            git push origin HEAD:${{ github.ref_name }}
          fi

      # 1Ô∏è‚É£5Ô∏è‚É£ Final status output
      - name: Done
        run: echo "‚úÖ Flutter build completed successfully!"
