name: Flutter Build

on:
  workflow_dispatch:   # 1. Manual workflow runs
  push:
    branches:
      - main           # 1. Push on main branch
      - beta           # 1. Push on beta branch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.37.0-0.1.pre"

    steps:

      # 2. Repository checkout
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history

      # 3. Git setup for committing fixed files
      - name: Setup Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # 4. Manual Flutter installation
      - name: Install Flutter
        run: |
          git clone -b $FLUTTER_VERSION https://github.com/flutter/flutter.git $HOME/flutter
          export PATH="$PATH:$HOME/flutter/bin"
          export FLUTTER_GIT_URL="https://github.com/flutter/flutter.git"

      # 5. Flutter preflight
      - name: Flutter doctor
        run: flutter doctor -v

      # 6. Fixes & project repair (all together)
      - name: Fix Dart file permissions
        run: find mobile-app/lib -name "*.dart" -exec chmod 644 {} \;

      - name: Run fix_files.sh
        run: bash mobile-app/scripts/fix_files.sh

      - name: Run fix_app_theme_imports.sh
        run: bash mobile-app/scripts/fix_app_theme_imports.sh

      # 7. Commit any fixed files
      - name: Commit fixed files
        run: |
          git add .
          git diff-index --quiet HEAD || git commit -m "Automated fix: AppTheme & permissions"

      # 8. Dart & Flutter dependency management
      - name: Check outdated Dart packages
        run: |
          flutter pub outdated
          flutter pub upgrade --major-versions
          flutter pub get

      # 9. Flutter build
      - name: Build debug APK
        run: flutter build apk --debug

      - name: Build release APK
        run: flutter build apk --release

      # 10. APK zipping
      - name: Zip APKs
        run: |
          mkdir -p build/apks
          cp build/app/outputs/flutter-apk/app-debug.apk build/apks/
          cp build/app/outputs/flutter-apk/app-release.apk build/apks/
          zip -r build/apks.zip build/apks

      # 11. Artifact upload
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: build/apks.zip

      # 12. Automatic versioning & build numbering placeholder
      - name: Versioning placeholder
        run: echo "Automatic versioning step (to be implemented)"

      # 13. Ensure scripts are executable
      - name: Make scripts executable
        run: chmod +x mobile-app/scripts/*.sh

      # 14. Maintaining working directory
      # Scripts do not change workflow's main working directory
