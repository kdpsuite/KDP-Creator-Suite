name: Build Flutter APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_apk:
    name: Build Debug and Release APK
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: kdpsuite/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      # 2️⃣ Set up Flutter
      - name: Set up Flutter
        uses: kdpsuite/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e
        with:
          flutter-version: 'stable'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 4️⃣ Determine version numbers
      - name: Set version numbers
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "0.0.1")
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          echo "VERSION_NAME=$TAG" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "VERSION_TAGGED_NAME=${TAG}+${BUILD_NUMBER}" >> $GITHUB_ENV
          echo "Version set to $TAG+$BUILD_NUMBER"

      # 5️⃣ Build Debug APK
      - name: Build Debug APK
        run: |
          sed -i "s/^version: .*/version: $VERSION_NAME-debug+$BUILD_NUMBER/" pubspec.yaml
          flutter build apk --debug

      # 6️⃣ Upload Debug APK as artifact
      - name: Upload Debug APK
        uses: kdpsuite/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: app-debug-${{ env.VERSION_TAGGED_NAME }}-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      # 7️⃣ Build Release APK
      - name: Build Release APK
        run: |
          sed -i "s/^version: .*/version: $VERSION_NAME+$BUILD_NUMBER/" pubspec.yaml
          flutter build apk --release

      # 8️⃣ Upload Release APK as artifact
      - name: Upload Release APK
        uses: kdpsuite/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: app-release-${{ env.VERSION_TAGGED_NAME }}-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # 9️⃣ GitHub Release steps commented out until internal fork & SHA are ready
      # - name: Create GitHub Release
      #   uses: kdpsuite/create-release@<full_commit_sha>
      #   with:
      #     tag_name: ${{ env.VERSION_TAGGED_NAME }}
      #     release_name: Release ${{ env.VERSION_TAGGED_NAME }}
      #     body: "Automated release from workflow run #${{ github.run_number }}"
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Debug APK to Release
      #   uses: kdpsuite/upload-release-asset@<full_commit_sha>
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: build/app/outputs/flutter-apk/app-debug.apk
      #     asset_name: app-debug-${{ env.VERSION_TAGGED_NAME }}.apk
      #     asset_content_type: application/vnd.android.package-archive
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Release APK to Release
      #   uses: kdpsuite/upload-release-asset@<full_commit_sha>
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: build/app/outputs/flutter-apk/app-release.apk
      #     asset_name: app-release-${{ env.VERSION_TAGGED_NAME }}.apk
      #     asset_content_type: application/vnd.android.package-archive
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
