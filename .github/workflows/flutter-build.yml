name: KDP Creator Suite Master Workflow

on:
  push:
    branches:
      - main
      - beta
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_repair:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Configure Git
      - name: Setup Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "Git user configured"

      # 3. Install Flutter (Beta Channel)
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'beta'
          flutter-version: '3.10.0'

      # 4. Run Flutter Doctor preflight
      - name: Flutter Doctor
        run: flutter doctor -v
        working-directory: ./mobile-app

      # 5. Mark repair scripts executable
      - name: Mark Repair Scripts Executable
        run: chmod +x mobile-app/scripts/*.sh

      # 6. Fix Dart file permissions before running scripts
      - name: Fix Dart Permissions
        run: find mobile-app -type f -name "*.dart" -exec chmod 644 {} \;

      # 7. Run repair scripts
      - name: Run Repair Scripts
        run: |
          bash mobile-app/scripts/fix_files.sh
          bash mobile-app/scripts/fix_app_theme_imports.sh

      # 8. Commit any fixes back to repo
      - name: Commit Repaired Files
        if: github.event_name == 'push'
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "chore(workflow): Auto-repair files via GitHub Actions [skip ci]"
            git push
          else
            echo "No changes to commit."

      # 9. Get dependencies
      - name: Get Flutter Dependencies
        run: flutter pub get
        working-directory: ./mobile-app

      # 10. Check outdated dependencies
      - name: Flutter Pub Outdated
        run: flutter pub outdated
        working-directory: ./mobile-app

      # 11. Upgrade dependencies (major versions)
      - name: Flutter Pub Upgrade
        run: flutter pub upgrade --major-versions
        working-directory: ./mobile-app

      # 12. Flutter Analyze
      - name: Flutter Analyze
        run: flutter analyze
        working-directory: ./mobile-app

      # 13. Optional preflight: clean & format
      - name: Optional Preflight
        run: |
          flutter clean
          flutter format lib
        working-directory: ./mobile-app

      # 14. Build APKs
      - name: Build Debug APK
        run: flutter build apk --debug
        working-directory: ./mobile-app

      - name: Build Release APK
        run: flutter build apk --release
        working-directory: ./mobile-app
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}

      # 15. Package APKs into zip
      - name: Zip APKs
        run: |
          mkdir -p mobile-app/build/apks
          cp mobile-app/build/app/outputs/flutter-apk/*.apk mobile-app/build/apks/
          cd mobile-app/build
          zip -r apks.zip apks/
          cd ../..
        shell: bash

      # 16. Upload artifact
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: KDP-Creator-Suite-APKs
          path: mobile-app/build/apks.zip

      # 17. Final integrity check
      - name: Final Integrity Check
        run: echo "ðŸŽ‰ Final Integrity Check: Workflow completed successfully!"
